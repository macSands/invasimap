% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_glmm_formula.R
\name{build_glmm_formula}
\alias{build_glmm_formula}
\title{Build a trait-environment GLMM formula safely and flexibly}
\usage{
build_glmm_formula(
  data,
  response = "count",
  species_col = "species",
  site_col = "site_id",
  trait_cols = NULL,
  env_cols = NULL,
  env_exclude = c("site_id", "x", "y", "count", "species"),
  include_interactions = TRUE,
  random_effects = c("(1 | species)", "(1 | site_id)")
)
}
\arguments{
\item{data}{\code{data.frame}. Long-format observations (e.g., species-by-site),
including the response, species ID, site ID, trait columns, and environment columns.}

\item{response}{\code{character} (default \code{"count"}).
Name of the response variable (e.g., count/abundance).}

\item{species_col}{\code{character} (default \code{"species"}).
Column name identifying species.}

\item{site_col}{\code{character} (default \code{"site_id"}).
Column name identifying sites.}

\item{trait_cols}{\code{NULL} or \code{character} vector.
If \code{NULL} (default), traits are auto-detected using name prefixes
\verb{^trait_}, \verb{^t_}, or \verb{^trt_}. If not found, falls back to
“everything not excluded” (see \code{env_exclude}). Pass explicit names
for full control.}

\item{env_cols}{\code{NULL} or \code{character} vector.
If \code{NULL} (default), environment variables are auto-detected using name
prefixes \verb{^env_}, \verb{^e_}, \verb{^clim_}, \verb{^soil_}. If not found,
falls back to “everything not in traits and not excluded”.}

\item{env_exclude}{\code{character} vector.
Columns to exclude from environment auto-detection. Defaults to
\code{c("site_id","x","y","count","species")}. Adjust to your schema.}

\item{include_interactions}{\code{logical} (default \code{TRUE}).
If \code{TRUE}, adds a single block term \code{(traits):(envs)} which expands
to all pairwise \eqn{trait \times environment} interactions.}

\item{random_effects}{\code{character} vector.
Random-effect terms to append to the RHS (e.g., \code{"(1 | species)"}).
Use \code{character(0)} to omit random effects. Default adds random intercepts
for species and site: \code{c("(1 | species)", "(1 | site_id)")}.}
}
\value{
A \code{formula} with fixed effects (traits + envs \link{+ interactions})
and any requested random effects, e.g.:
\preformatted{
  count ~ trait_cont1 + ... + trait_cat + env1 + ... + envK +
          (trait_cont1 + ... + trait_cat):(env1 + ... + envK) +
          (1 | species) + (1 | site_id)
  }
}
\description{
Constructs a model formula for trait-environment analyses in a single step.
The function (i) auto-detects trait and environment columns from a long-format
table, (ii) assembles fixed effects for all traits and all environment variables,
(iii) optionally includes all pairwise \eqn{trait \times environment} interactions,
and (iv) appends user-specified random-effects terms. The returned object is a
standard \code{formula} suitable for \pkg{glmmTMB}, \pkg{lme4}, etc.
}
\details{
\strong{Auto-detection:}
\itemize{
\item Traits: first tries prefixes \verb{^trait_}, \verb{^t_}, \verb{^trt_}. If none match,
uses all columns not in \code{env_exclude}, not \code{response}, not \code{species_col},
and not \code{site_col}.
\item Environment: first tries prefixes \verb{^env_}, \verb{^e_}, \verb{^clim_}, \verb{^soil_}.
If none match, uses remaining non-excluded columns not already assigned as traits.
}

\strong{Interactions:}
When \code{include_interactions = TRUE}, a single block term
\code{(t1 + t2 + ...):(e1 + e2 + ...)} is inserted; model-fitting packages will
expand it to all pairwise interactions. Disable with \code{FALSE} if the design
is too large or you prefer targeted interactions.

\strong{Random effects:}
Supplied verbatim (e.g., random intercepts/slopes). For example,
\code{c("(1 | species)", "(1 | site_id)")} or \code{c("(1 + key_trait | species)")}.
}
\examples{
# Minimal reproducible toy example -----------------------------------------
set.seed(1)
n <- 100
longDF <- data.frame(
  site_id = factor(sample(paste0("s", 1:10), n, TRUE)),
  species = factor(sample(paste0("sp", 1:15), n, TRUE)),
  x = runif(n), y = runif(n),
  count = rpois(n, lambda = 3),
  # traits
  trait_cont1 = rnorm(n),
  trait_cont2 = rnorm(n),
  trait_cat = factor(sample(letters[1:3], n, TRUE)),
  # environments
  env1 = scale(rnorm(n))[, 1],
  env2 = scale(runif(n))[, 1]
)

# Build a full formula with all trait × environment interactions and default REs
fml <- build_glmm_formula(longDF)
fml

# Example fit (uncomment if glmmTMB is available)
# mod = glmmTMB::glmmTMB(fml, data = longDF, family = glmmTMB::tweedie(link = "log"))
# summary(mod)

# Targeted columns & no interactions
fml2 <- build_glmm_formula(
  data = longDF,
  trait_cols = c("trait_cont1", "trait_cont2", "trait_cat"),
  env_cols = c("env1", "env2"),
  include_interactions = FALSE,
  random_effects = character(0)
)
fml2

}
\seealso{
\code{\link[glmmTMB]{glmmTMB}}, \code{\link[lme4]{lmer}}, \code{\link[stats]{as.formula}}
}
